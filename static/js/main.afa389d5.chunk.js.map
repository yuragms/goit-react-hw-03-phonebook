{"version":3,"sources":["Components/Container/Container.styled.jsx","Components/Container/Container.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/Contactlist.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App.js","index.js"],"names":["Container","styled","div","Title","h1","ContainerApp","children","ContactForm","form","Label","label","Input","input","Button","button","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","console","log","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","filter","addContactApp","AddedContact","find","contact","toLowerCase","alert","prevState","delContact","contactId","onChangeFilter","getFilteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa389d5.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  padding: 10px 40px;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport { Container, Title };\n","import { Container } from \"./Container.styled.jsx\";\n\nconst ContainerApp = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default ContainerApp;\n","import styled from \"@emotion/styled\";\n\nexport const ContactForm = styled.form`\n  display: block;\n  outline: 1px solid tomato;\n  max-width: 600px;\n  padding: 30px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 6px 13px;\n  background-color: white;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  font-size: 15px;\n  border-radius: 5px;\n  border-color: grey;\n`;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ContactForm, Label, Input, Button } from \"./ContactForm.styled\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    console.log(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\" });\n    this.setState({ number: \"\" });\n  };\n\n  render() {\n    return (\n      <ContactForm onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </Label>\n        <Label htmlFor={this.numberInputId}>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </ContactForm>\n    );\n  }\n}\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  outline: 1px solid tomato;\n  max-width: 600px;\n  padding: 30px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 6px 13px;\n  background-color: white;\n  font-size: 20px;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.4fr;\n  margin-bottom: 12px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\n\nimport { List, Item, Button } from \"./Contactlist.styled.jsx\";\n\nexport const ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <Item key={id}>\n        <span>{name}:</span> <span>{number}</span>\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </Button>\n      </Item>\n    ))}\n  </List>\n);\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: auto;\n`;\n","import React from \"react\";\n\nimport { Label, Input } from \"./Filter.styled.jsx\";\n\nexport const Filter = ({ value, onChange }) => (\n  <Label>\n    Find contacts by name\n    <Input type=\"text\" value={value} onChange={onChange} />\n  </Label>\n);\n","import React, { Component } from \"react\";\nimport ContainerApp from \"./Container/Container.jsx\";\nimport Form from \"./ContactForm/ContactForm.jsx\";\nimport { Title } from \"./Container/Container.styled.jsx\";\nimport { ContactList } from \"./ContactList/ContactList.jsx\";\nimport { Filter } from \"./Filter/Filter.jsx\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContactApp = (name, number) => {\n    const AddedContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isRepeatableContact = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isRepeatableContact) {\n      alert(`${name} is alredy in contacts`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [AddedContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  delContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    return (\n      <ContainerApp>\n        <Title>Phonebook</Title>\n        <Form onSubmit={this.addContactApp} />\n        <Title>Contacts</Title>\n        <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          onDeleteContact={this.delContact}\n        />\n      </ContainerApp>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}